// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stefanini.Infra.Data;

#nullable disable

namespace Stefanini.Infra.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250418232410_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Stefanini.Domain.CityAggregate.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        },
                        new
                        {
                            Id = 5
                        },
                        new
                        {
                            Id = 6
                        },
                        new
                        {
                            Id = 7
                        },
                        new
                        {
                            Id = 8
                        },
                        new
                        {
                            Id = 9
                        },
                        new
                        {
                            Id = 10
                        },
                        new
                        {
                            Id = 11
                        },
                        new
                        {
                            Id = 12
                        },
                        new
                        {
                            Id = 13
                        },
                        new
                        {
                            Id = 14
                        },
                        new
                        {
                            Id = 15
                        },
                        new
                        {
                            Id = 16
                        },
                        new
                        {
                            Id = 17
                        });
                });

            modelBuilder.Entity("Stefanini.Domain.CityAggregate.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .HasDatabaseName("IX_Person_CityId");

                    b.ToTable("Person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5
                        });
                });

            modelBuilder.Entity("Stefanini.Domain.CityAggregate.City", b =>
                {
                    b.OwnsOne("Stefanini.Domain.CityAggregate.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("CityId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Name");

                            b1.HasKey("CityId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("IX_City_Name");

                            b1.ToTable("City");

                            b1.WithOwner()
                                .HasForeignKey("CityId");

                            b1.HasData(
                                new
                                {
                                    CityId = 1,
                                    Value = "São Paulo"
                                },
                                new
                                {
                                    CityId = 2,
                                    Value = "Rio de Janeiro"
                                },
                                new
                                {
                                    CityId = 3,
                                    Value = "Belo Horizonte"
                                },
                                new
                                {
                                    CityId = 4,
                                    Value = "Salvador"
                                },
                                new
                                {
                                    CityId = 5,
                                    Value = "Porto Alegre"
                                },
                                new
                                {
                                    CityId = 6,
                                    Value = "Curitiba"
                                },
                                new
                                {
                                    CityId = 7,
                                    Value = "Fortaleza"
                                },
                                new
                                {
                                    CityId = 8,
                                    Value = "Recife"
                                },
                                new
                                {
                                    CityId = 9,
                                    Value = "Manaus"
                                },
                                new
                                {
                                    CityId = 10,
                                    Value = "Belém"
                                },
                                new
                                {
                                    CityId = 11,
                                    Value = "Goiânia"
                                },
                                new
                                {
                                    CityId = 12,
                                    Value = "Campo Grande"
                                },
                                new
                                {
                                    CityId = 13,
                                    Value = "Teresina"
                                },
                                new
                                {
                                    CityId = 14,
                                    Value = "São Luís"
                                },
                                new
                                {
                                    CityId = 15,
                                    Value = "João Pessoa"
                                },
                                new
                                {
                                    CityId = 16,
                                    Value = "Natal"
                                },
                                new
                                {
                                    CityId = 17,
                                    Value = "Maceió"
                                });
                        });

                    b.OwnsOne("Stefanini.Domain.CityAggregate.ValueObjects.UF", "UF", b1 =>
                        {
                            b1.Property<int>("CityId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("CityId");

                            b1.ToTable("City");

                            b1.WithOwner()
                                .HasForeignKey("CityId");

                            b1.HasData(
                                new
                                {
                                    CityId = 1,
                                    Value = "SP"
                                },
                                new
                                {
                                    CityId = 2,
                                    Value = "RJ"
                                },
                                new
                                {
                                    CityId = 3,
                                    Value = "MG"
                                },
                                new
                                {
                                    CityId = 4,
                                    Value = "BA"
                                },
                                new
                                {
                                    CityId = 5,
                                    Value = "RS"
                                },
                                new
                                {
                                    CityId = 6,
                                    Value = "PR"
                                },
                                new
                                {
                                    CityId = 7,
                                    Value = "CE"
                                },
                                new
                                {
                                    CityId = 8,
                                    Value = "PE"
                                },
                                new
                                {
                                    CityId = 9,
                                    Value = "AM"
                                },
                                new
                                {
                                    CityId = 10,
                                    Value = "PA"
                                },
                                new
                                {
                                    CityId = 11,
                                    Value = "GO"
                                },
                                new
                                {
                                    CityId = 12,
                                    Value = "MS"
                                },
                                new
                                {
                                    CityId = 13,
                                    Value = "PI"
                                },
                                new
                                {
                                    CityId = 14,
                                    Value = "MA"
                                },
                                new
                                {
                                    CityId = 15,
                                    Value = "PB"
                                },
                                new
                                {
                                    CityId = 16,
                                    Value = "RN"
                                },
                                new
                                {
                                    CityId = 17,
                                    Value = "AL"
                                });
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("UF")
                        .IsRequired();
                });

            modelBuilder.Entity("Stefanini.Domain.CityAggregate.Entity.Person", b =>
                {
                    b.HasOne("Stefanini.Domain.CityAggregate.City", "City")
                        .WithMany("Person")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("CPF", "CPF", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)")
                                .HasColumnName("CPF");

                            b1.HasKey("PersonId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("IX_Person_CPF");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = 1,
                                    Value = "12345678901"
                                },
                                new
                                {
                                    PersonId = 2,
                                    Value = "23456789012"
                                },
                                new
                                {
                                    PersonId = 3,
                                    Value = "34567890123"
                                },
                                new
                                {
                                    PersonId = 4,
                                    Value = "45678901234"
                                },
                                new
                                {
                                    PersonId = 5,
                                    Value = "56789012345"
                                });
                        });

                    b.OwnsOne("Stefanini.Domain.CityAggregate.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Name");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = 1,
                                    Value = "John Doe"
                                },
                                new
                                {
                                    PersonId = 2,
                                    Value = "Jane Smith"
                                },
                                new
                                {
                                    PersonId = 3,
                                    Value = "Alice Johnson"
                                },
                                new
                                {
                                    PersonId = 4,
                                    Value = "Bob Brown"
                                },
                                new
                                {
                                    PersonId = 5,
                                    Value = "Charlie Davis"
                                });
                        });

                    b.OwnsOne("Stefanini.Domain.CityAggregate.ValueObjects.Age", "Age", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Age");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = 1,
                                    Value = 30
                                },
                                new
                                {
                                    PersonId = 2,
                                    Value = 25
                                },
                                new
                                {
                                    PersonId = 3,
                                    Value = 28
                                },
                                new
                                {
                                    PersonId = 4,
                                    Value = 35
                                },
                                new
                                {
                                    PersonId = 5,
                                    Value = 40
                                });
                        });

                    b.Navigation("Age")
                        .IsRequired();

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("Stefanini.Domain.CityAggregate.City", b =>
                {
                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
